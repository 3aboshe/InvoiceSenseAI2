// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  invoices  Invoice[]
  
  @@map("users")
}

model Client {
  id          String   @id @default(cuid())
  name        String
  email       String?
  phone       String?
  address     String?
  totalRevenue Float   @default(0)
  invoiceCount Int     @default(0)
  lastInvoiceDate DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  invoices Invoice[]
  
  @@map("clients")
}

model Invoice {
  id              String           @id @default(cuid())
  invoiceNumber   String?
  clientId        String?
  client          Client?          @relation(fields: [clientId], references: [id])
  processedById   String
  processedBy     User             @relation(fields: [processedById], references: [id])
  
  status          InvoiceStatus    @default(PENDING)
  processingTime  Int?             // in milliseconds
  originalFilename String?
  
  totalAmount     Float
  currency        String           @default("USD")
  
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  
  lineItems       InvoiceLineItem[]
  
  @@map("invoices")
}

model InvoiceLineItem {
  id          String  @id @default(cuid())
  invoiceId   String
  invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  description String
  quantity    Float
  unitPrice   Float
  amount      Float
  
  @@map("invoice_line_items")
}

model Analytics {
  id            String   @id @default(cuid())
  date          DateTime @default(now())
  
  totalRevenue  Float    @default(0)
  invoiceCount  Int      @default(0)
  avgProcessingTime Float  @default(0)
  
  currencyBreakdown String? // JSON string
  
  createdAt     DateTime @default(now())
  
  @@map("analytics")
}

enum Role {
  EMPLOYEE
  ADMIN
}

enum InvoiceStatus {
  PENDING
  PROCESSING
  COMPLETED
  ERROR
}